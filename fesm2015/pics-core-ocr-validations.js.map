{"version":3,"file":"pics-core-ocr-validations.js","sources":["../../../../projects/pics-core/ocr-validations/src/lib/ocr-validations.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/@core/ocr-validation-url.config.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/service/store.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/store/permission.store.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/service/data-store.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/common/common.entity.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/service/alert.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/config/auth-url.config.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/service/http.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/auth/auth.state.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/auth/auth.store.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/service/credentials.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/service/storage.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/service/local.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/service/auth.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/@core/ocr-validation.service.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/ocrvalidation/ocrvalidation.component.ts","../../../../projects/pics-core/ocr-validations/src/lib/pics-ocrvalidation/ocrvalidation/ocrvalidation.component.html","../../../../projects/pics-core/ocr-validations/src/lib/ocr-validations.component.ts","../../../../projects/pics-core/ocr-validations/src/lib/ocr-validations.module.ts","../../../../projects/pics-core/ocr-validations/src/public-api.ts","../../../../projects/pics-core/ocr-validations/src/pics-core-ocr-validations.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OcrValidationsService {\n\n  constructor() { }\n}\n","export class OcrValidationServiceConfig {\r\n  public static EndPoint = {\r\n    OCRValidate: {\r\n      GetNewOcrData: '/ocr/analyzeDocument',\r\n      CreateReferral: '/ref/referral/create',\r\n      SaveClientDetail: '/ref/client/create',\r\n      SaveContactDetail: '/ref/contact/create',\r\n      SaveProviderDetail: '/ref/provider/search',\r\n      SaveReferralProvider: '/ref/referral-provider/create',\r\n      CreateAttachment: '/ref/attachment/create',\r\n      UpdateImgaCatogory: '/ocr/imageCategory/',\r\n      CancelRefferral: '/file/delete-file'\r\n    }\r\n  };\r\n}\r\nexport class RBACINFO {\r\n  apiHost ='';\r\n  tokenKey = '';\r\n  others?: any;\r\n  orgID?: any;\r\n  environment?: Environment;\r\n}\r\nexport class Environment {\r\n  mstrUsername?: string;\r\n  mstrPassword?: string;\r\n  mstrURL?: string;\r\n  mstrProjectID?: string;\r\n  applicationid?: string;\r\n  priority?: string\r\n}","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport class Store<T> {\r\n  state$: Observable<T>;\r\n  private _state$: BehaviorSubject<T>;\r\n\r\n  protected constructor(initialState: T) {\r\n    this._state$ = new BehaviorSubject(initialState);\r\n    this.state$ = this._state$.asObservable();\r\n  }\r\n\r\n  get state(): T {\r\n    return this._state$.getValue();\r\n  }\r\n\r\n  setState(nextState: T): void {\r\n    this._state$.next(nextState);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '../service/store.service';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class PermissionStore extends Store<any> {\r\n  constructor() {\r\n    super({});\r\n  }\r\n\r\n  setStore(data: any, type: string = 'P'): void {\r\n    const permissionMap: Record<string, boolean> = {};\r\n    if (type === 'P') {\r\n      const flatData = [...this.flat(data)];\r\n      flatData.forEach((permission: any) => {\r\n        permissionMap[permission.name] = permission.allowed;\r\n      });\r\n      this.setState({ ...this.state, ...permissionMap });\r\n    } else {\r\n      data.forEach((permission: any) => {\r\n        permissionMap['GALKP_' + permission.key] = permission.lookuprolepermissions;\r\n      });\r\n      this.setState({ ...this.state, ...permissionMap });\r\n    }\r\n  }\r\n\r\n  getStore(type: string = 'P'): Observable<any> {\r\n    if (type === 'P') return of(this.state.permissions);\r\n    else return of(this.state.lookupPermissions);\r\n  }\r\n\r\n  private flat(array: any[]) {\r\n    let result: any[] = [];\r\n    array.forEach(item => {\r\n      result.push(item);\r\n      if (item.permissions && Array.isArray(item.permissions)) {\r\n        result = result.concat(this.flat(item.permissions));\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DataStoreService {\r\n  private currentStoreSubject = new BehaviorSubject<any>({} as any);\r\n  public currentStore = this.currentStoreSubject.asObservable();\r\n\r\n  constructor() {\r\n    // test code\r\n  }\r\n\r\n  setData(key: string, value: any) {\r\n    const currentStore = this.getCurrentStore();\r\n    currentStore[key] = value;\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  setObject(value: any) {\r\n    this.currentStoreSubject.next(value);\r\n  }\r\n\r\n  getData(key: string): any {\r\n    const currentStore = this.getCurrentStore();\r\n    return currentStore[key];\r\n  }\r\n\r\n  clearStore() {\r\n    const currentStore = this.getCurrentStore();\r\n    Object.keys(currentStore).forEach(key => {\r\n      delete currentStore[key];\r\n    });\r\n    this.currentStoreSubject.next(currentStore);\r\n  }\r\n\r\n  getCurrentStore(): any {\r\n    return this.currentStoreSubject.value;\r\n  }\r\n}\r\n","export interface DynamicObject {\r\n  [key: string]: any;\r\n}\r\n\r\nexport enum AlertType {\r\n  Success,\r\n  Error,\r\n  Info,\r\n  Warning\r\n}\r\nexport class Alert {\r\n  type!: AlertType;\r\n  message!: string;\r\n}\r\nexport interface Insights {\r\n  name: string;\r\n  series: Series[];\r\n}\r\nexport interface Series {\r\n  value: number;\r\n  name: string;\r\n  month: string;\r\n}\r\n\r\nexport interface Status {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nexport class UserGroupDto {\r\n  id?: number;\r\n  name?: string;\r\n  description?: string | null;\r\n  constructor(data?: Partial<UserGroupDto>) {\r\n    Object.assign(this, data);\r\n  }\r\n}\r\n\r\nexport class UserRolePageDto {\r\n  id?: number;\r\n  name?: string;\r\n  route?: string;\r\n  icon?: string | null;\r\n  order?: number;\r\n  ismenu?: boolean;\r\n  constructor(data?: Partial<UserRolePageDto>) {\r\n    Object.assign(this, data);\r\n  }\r\n}\r\n\r\nexport class UserRoleDto {\r\n  id?: number;\r\n  name?: string;\r\n  description?: string | null;\r\n  priority?: number;\r\n  order?: number;\r\n  defaultpage?: UserRolePageDto;\r\n  defaultpageid?: number;\r\n  parentid?: number | null;\r\n  parent?: UserRoleDto | null;\r\n  constructor(data?: Partial<UserRoleDto>) {\r\n    Object.assign(this, data);\r\n  }\r\n}\r\n\r\nexport class UserDto {\r\n  id?: number;\r\n  name?: string;\r\n  description?: string | null;\r\n  priority?: number;\r\n  order?: number;\r\n  defaultpage?: UserRolePageDto;\r\n  defaultpageid?: number;\r\n  parentid?: number | null;\r\n  parent?: UserRoleDto | null;\r\n  constructor(data?: Partial<UserDto>) {\r\n    Object.assign(this, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationStart, Router } from '@angular/router';\r\nimport { Alert, AlertType } from '../common/common.entity';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AlertService {\r\n  private subject = new Subject<Alert>();\r\n  private keepAfterRouteChange = false;\r\n\r\n  constructor(private router: Router) {\r\n    // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n    router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        if (this.keepAfterRouteChange) {\r\n          // only keep for a single route change\r\n          this.keepAfterRouteChange = false;\r\n        } else {\r\n          // clear alert messages\r\n          this.clear();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlert(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  success(message: string, keepAfterRouteChange = false) {\r\n    this.alert(AlertType.Success, message, keepAfterRouteChange);\r\n  }\r\n\r\n  error(message: string, keepAfterRouteChange = false) {\r\n    this.alert(AlertType.Error, message, keepAfterRouteChange);\r\n  }\r\n\r\n  info(message: string, keepAfterRouteChange = false) {\r\n    this.alert(AlertType.Info, message, keepAfterRouteChange);\r\n  }\r\n\r\n  warn(message: string, keepAfterRouteChange = false) {\r\n    this.alert(AlertType.Warning, message, keepAfterRouteChange);\r\n  }\r\n\r\n  alert(type: AlertType, message: string, keepAfterRouteChange = false) {\r\n    this.keepAfterRouteChange = keepAfterRouteChange;\r\n    this.subject.next(<Alert>{ type: type, message: message });\r\n  }\r\n\r\n  clear() {\r\n    // clear alerts\r\n    this.subject.next();\r\n  }\r\n}\r\n","export class AuthURL {\r\n  public static EndPoints = {\r\n    auth: {\r\n      user: {\r\n        conformMail: '/org/auth/forgot-password',\r\n        changePassword: '/org/auth/forgot-password-verification',\r\n        login: '/org/auth/login',\r\n        refreshToken: '/org/auth/refresh-token',\r\n        logout: '/org/auth/logout',\r\n        userInfo: '/org/user/page/list',\r\n        userRole: '/org/user/{id}',\r\n        routeToDynamicPage: '/page/organisation/{orgid}?returnUserPage=true&excludeNoActiveVersionPages=true',\r\n        authMe: '/org/auth/me',\r\n        resetPassword: '/org/user/reset-password',\r\n        orgList: '/org/organization/tree',\r\n        notification: '/worker/notification',\r\n        workerAvailability: '/worker/updateAvailablity',\r\n        getWorkerAvailability: '/worker/getByCurrentUser'\r\n      },\r\n      permission: {\r\n        permissionRoleById: '/app/permission/role/{id}',\r\n        pagePermission: '/app/permission/page',\r\n        pageLookupPermission: '/app/permission/page/lookup'\r\n      },\r\n      microstrategy: {\r\n        login: '/microstrategy/login',\r\n        getLibrary: '/microstrategy/library'\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n// import 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { map } from 'rxjs/internal/operators';\r\nimport { DataStoreService } from './data-store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  RBACORG: any;\r\n  overrideUrl = true;\r\n  errorData!: HttpErrorResponse;\r\n  baseUrl = '';\r\n  tokenKey: any;\r\n  public headers = new HttpHeaders()\r\n    .set('Accept', 'application/json')\r\n    .set('Content-Type', 'application/json')\r\n    .set('role', 'role=CP_PUBLIC');\r\n\r\n  public showSpinner: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public outsideShowSpinner: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  url1: string;\r\n  url!: string;\r\n  constructor(private http: HttpClient,private _storeservice: DataStoreService) {\r\n    // this.url = environment.apiHost; //url from config file or environments\r\n    this._storeservice.currentStore.subscribe((res: any) => {\r\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\r\n        this.RBACORG = res['RBACORG'];\r\n        this.url = this.RBACORG['apiHost'] ? this.RBACORG['apiHost'] : 'http://localhost:3000/api';\r\n        this.tokenKey = this.RBACORG['tokenKey'];\r\n      }\r\n    });\r\n    this.url1 = '';\r\n  }\r\n\r\n  get(apiRoute: string) {\r\n    return this.http.get(`${this.url + apiRoute}`, {\r\n      headers: this.getHttpHeaders()\r\n    });\r\n  }\r\n\r\n  post(apiRoute: string, body: any) {\r\n    return this.http.post(`${this.url + apiRoute}`, body, {\r\n      headers: this.getHttpHeaders()\r\n    });\r\n  }\r\n\r\n  put(apiRoute: string, body: any) {\r\n    return this.http.put(`${this.url + apiRoute}`, body, {\r\n      headers: this.getHttpHeaders()\r\n    });\r\n  }\r\n\r\n  patch(apiRoute: string, body?: any) {\r\n    return this.http.patch(`${this.url + apiRoute}`, body, {\r\n      headers: this.getHttpHeaders()\r\n    });\r\n  }\r\n\r\n  delete(apiRoute: string) {\r\n    return this.http.delete(`${this.url + apiRoute}`, {\r\n      headers: this.getHttpHeaders()\r\n    });\r\n  }\r\n\r\n  getHttpHeaders(): HttpHeaders {\r\n    return new HttpHeaders().set('key', 'value');\r\n  }\r\n\r\n  getAttachmentHttpHeaders(contentType:any): HttpHeaders {\r\n    return new HttpHeaders().set('Content-Type', contentType);\r\n  }\r\n  putUpload(apiRoute: string, body: any, contentType:any) {\r\n    return this.http.put(`${apiRoute}`, body, { headers: this.getAttachmentHttpHeaders(contentType) });\r\n  }\r\n\r\n  putupload2(apiRoute: string, body: any, contenttype:any): Observable<any> {\r\n    return this.http\r\n      .put(`${this.url1 + apiRoute}`, body, {\r\n        headers: this.getAttachmentHttpHeaders(contenttype),\r\n        observe: 'response'\r\n      })\r\n      .pipe(\r\n        map(data => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  getAutosuggest(url:any) {\r\n    return this.http.get(`${url}`);\r\n  }\r\n  /**\r\n   *\r\n   * @param apiRoute\r\n   * This function will download the stream file from the API service.\r\n   * No HTTP required for this stream. So used Window.location.href to download the file\r\n   */\r\n  getFormDownloaded(apiRoute: string) {\r\n    window.location.href = `${this.url + apiRoute}`;\r\n  }\r\n  //common http service(optional)\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side errors\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // Server-side errors\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${\r\n        error?.error?.message ? error?.error?.message : error.message\r\n      }`;\r\n    }\r\n    return throwError(errorMessage);\r\n  }\r\n  getToken(): any {\r\n    const token = this.tokenKey ? this.tokenKey : 'jwt-token';\r\n    return sessionStorage.getItem(token);\r\n  }\r\n}\r\n","import { UserDto } from '../common/common.entity';\r\n\r\nexport class AuthState {\r\n  user?: UserDto;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserDto } from '../common/common.entity';\r\nimport { HttpService } from '../service/http.service';\r\nimport { Store } from '../service/store.service';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthURL } from '../config/auth-url.config';\r\nimport { AuthState } from './auth.state';\r\n@Injectable()\r\nexport class AuthStore extends Store<AuthState> {\r\n  constructor(private httpService: HttpService) {\r\n    super(new AuthState());\r\n  }\r\n\r\n  addAuthInfo(user: UserDto): void {\r\n    this.setState({ ...this.state, user });\r\n  }\r\n\r\n  getAuthInfo(): Observable<any> {\r\n    console.log(this.state);\r\n    if (this.state.user) {\r\n      return of(this.state.user);\r\n    } else {\r\n      return forkJoin([this.httpService.get(AuthURL.EndPoints.auth.user.userInfo)]).pipe(\r\n        tap(([user]) => {\r\n          return user;\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Credentials {\r\n  // Customize received credentials here\r\n  username: string;\r\n  token: string;\r\n}\r\n\r\nconst credentialsKey = 'jwt-token';\r\n\r\n/**\r\n * Provides storage for authentication credentials.\r\n * The Credentials interface should be replaced with proper implementation.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CredentialsService {\r\n  private token: string | null = null;\r\n\r\n  constructor() {\r\n    const savedCredentials = sessionStorage.getItem(credentialsKey);\r\n    if (savedCredentials) {\r\n      this.token = savedCredentials;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks is the user is authenticated.\r\n   * @return True if the user is authenticated.\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return !!this.credentials;\r\n  }\r\n\r\n  /**\r\n   * Gets the user credentials.\r\n   * @return The user credentials or null if the user is not authenticated.\r\n   */\r\n  get credentials(): string | null {\r\n    return this.token;\r\n  }\r\n\r\n  /**\r\n   * Sets the user credentials.\r\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\r\n   * Otherwise, the credentials are only persisted for the current session.\r\n   * @param credentials The user credentials.\r\n   * @param remember True to remember credentials across sessions.\r\n   */\r\n  setCredentials(credentials?: string) {\r\n    this.token = credentials || null;\r\n    if (credentials) {\r\n      sessionStorage.setItem(credentialsKey, credentials);\r\n    } else {\r\n      sessionStorage.clear();\r\n    }\r\n  }\r\n}\r\n","export class StorageService {\r\n  constructor(protected Storage: any) {}\r\n\r\n  public getItem(key: string): any {\r\n    return this.Storage.getItem(key);\r\n  }\r\n\r\n  public setItem(key: string, item: any): void {\r\n    return this.Storage.setItem(key, item);\r\n  }\r\n\r\n  public getObj(key: string, safe = true): any {\r\n    try {\r\n      const item = this.getItem(key);\r\n      return JSON.parse(item);\r\n    } catch (e) {\r\n      if (!safe) {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setObj(key: string, item: any): void {\r\n    return this.setItem(key, JSON.stringify(item));\r\n  }\r\n\r\n  public removeItem(key: string): void {\r\n    this.Storage.removeItem(key);\r\n  }\r\n\r\n  public clear(): void {\r\n    this.Storage.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StorageService } from './storage.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalService extends StorageService {\r\n  constructor() {\r\n    super(window.sessionStorage);\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthStore } from '../auth/auth.store';\r\n\r\nimport { AuthURL } from '../config/auth-url.config';\r\nimport { BehaviorSubject, forkJoin, Observable, of } from 'rxjs';\r\nimport { mergeMap, tap } from 'rxjs/operators';\r\n// import { AppConstants } from '../entities/app-constants';\r\nimport { AlertService } from './alert.service';\r\nimport { CredentialsService } from './credentials.service';\r\nimport { HttpService } from './http.service';\r\nimport { LocalService } from './local.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  sharedInfo: any;\r\n  alertService: AlertService;\r\n  constructor(\r\n    injector: Injector,\r\n    private httpService: HttpService,\r\n    private _router: Router,\r\n    private store: AuthStore,\r\n    private credentialsService: CredentialsService,\r\n    private localstore: LocalService\r\n  ) {\r\n    this.alertService = injector.get<AlertService>(AlertService);\r\n   \r\n  }\r\n\r\n  public orgInfo = new BehaviorSubject<any>('');\r\n  currentOrgInfo = this.orgInfo.asObservable();\r\n\r\n  public currentMenu = new BehaviorSubject<any>('');\r\n  currentMenuInfo = this.currentMenu.asObservable();\r\n\r\n  feedOrgInfo(data: any) {\r\n    this.orgInfo.next(data);\r\n  }\r\n  getCurrentMenu(data: any) {\r\n    this.currentMenu.next(data);\r\n  }\r\n\r\n  getUserOrgList() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.orgList);\r\n  }\r\n\r\n  getUnNotified() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.notification);\r\n  }\r\n\r\n  updateUnNotified(data:any) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.notification, data);\r\n  }\r\n\r\n  updateWorkerAvailability(data:any) {\r\n    return this.httpService.patch(AuthURL.EndPoints.auth.user.workerAvailability, data);\r\n  }\r\n\r\n  getWorkerAvailability() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.getWorkerAvailability);\r\n  }\r\n\r\n  getMstrToken() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.microstrategy.login).pipe((res:any) => {\r\n      return res;\r\n    });\r\n  }\r\n\r\n  public login(email: string, password: string, otp: string): Observable<any> {\r\n    const body = {\r\n      email: email,\r\n      password: password,\r\n      secret: otp ? otp : ''\r\n    };\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.login, body).pipe(\r\n      mergeMap((res: any): Observable<[any]> => {\r\n        if (res['data'] === 'MFA_CODE_SEND') {\r\n          return of(res['data']);\r\n        }\r\n        this.credentialsService.setCredentials(res['data'].idToken.jwtToken);\r\n        sessionStorage.setItem('refreshToken', res['data'].refreshToken.token);\r\n        sessionStorage.setItem('email', res['data'].idToken.payload['email']);\r\n        sessionStorage.setItem('id', res['data'].idToken.payload['custom:id']);\r\n        sessionStorage.setItem('username', res['data'].idToken.payload['name']);\r\n        return this.getUserInfo();\r\n      })\r\n    );\r\n  }\r\n\r\n  public refreshToken() {\r\n    const email = sessionStorage.getItem('email');\r\n    const refreshToken = sessionStorage.getItem('refreshToken');\r\n    const body = {\r\n      email,\r\n      refreshToken\r\n    };\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.refreshToken, body).pipe(\r\n      mergeMap((res: any): any => {\r\n        this.credentialsService.setCredentials(res['data'].idToken.jwtToken);\r\n        sessionStorage.setItem('refreshToken', res['data'].refreshToken.token);\r\n        sessionStorage.setItem('email', res['data'].idToken.payload['email']);\r\n        sessionStorage.setItem('id', res['data'].idToken.payload['custom:id']);\r\n        sessionStorage.setItem('username', res['data'].idToken.payload['name']);\r\n        console.log('new token generated...', res['data'].idToken.jwtToken);\r\n        return [res['data'].idToken.jwtToken];\r\n      })\r\n    );\r\n  }\r\n\r\n  public resetLoggedIn() {\r\n    this.httpService\r\n      .post(AuthURL.EndPoints.auth.user.logout, {\r\n        email: sessionStorage.getItem('email')\r\n      })\r\n      .subscribe(() => {\r\n        console.log('Logged in flag reset successful.');\r\n      });\r\n  }\r\n\r\n  public logout() {\r\n    this._router.navigate(['/login']);\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n  }\r\n\r\n  public getUserInfo(): Observable<[any]> {\r\n    return forkJoin([this.httpService.get(AuthURL.EndPoints.auth.user.userInfo)]).pipe(\r\n      tap(([user]) => {\r\n        // this.store.addAuthInfo(user['data']);\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getUserRole(id:any): Observable<any> {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.userRole.replace('{id}', id)).pipe((res:any) => {\r\n      return res;\r\n    });\r\n  }\r\n\r\n  public routeToDynamicPage(orgid:any): Observable<any> {\r\n    return this.httpService\r\n      .get(AuthURL.EndPoints.auth.user.routeToDynamicPage.replace('{orgid}', orgid))\r\n      .pipe((res: any) => {\r\n        return res;\r\n      });\r\n  }\r\n\r\n  getAuthMe() {\r\n    return this.httpService.get(AuthURL.EndPoints.auth.user.authMe);\r\n  }\r\n\r\n  ResetPassword(data: any) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.resetPassword, data);\r\n  }\r\n\r\n  public getRoleKey() {\r\n    const user = this.localstore.getObj('user');\r\n    if (user && user.role) {\r\n      return user.role.rolekey;\r\n    }\r\n  }\r\n\r\n  public isAdmin() {\r\n    return 'ADM' === this.getRoleKey();\r\n  }\r\n\r\n  public getOrgID() {\r\n    const user = this.localstore.getObj('user');\r\n    if (user && user.userWorkInfo && user.userWorkInfo.organization && user.userWorkInfo.organization.id) {\r\n      return user.userWorkInfo.organization.id;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  conformMail(data:any) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.conformMail, data);\r\n  }\r\n\r\n  changePassword(data:any) {\r\n    return this.httpService.post(AuthURL.EndPoints.auth.user.changePassword, data);\r\n  }\r\n\r\n  setSharedMessage(data:any) {\r\n    this.sharedInfo = data;\r\n  }\r\n\r\n  getSharedMessage() {\r\n    return this.sharedInfo;\r\n  }\r\n\r\n  // async checkDynamicPagePermission(pageId: any) {\r\n  //   const dynamicPages = await this.getAuthorizedPages();\r\n  //   // if (pageId) {\r\n  //   //   this.dynamicTabPageService.getPageById(pageId).subscribe(res => {\r\n  //   //     if (dynamicPages.some(page => page.id === res['data'][0].activeVersion.id)) {\r\n  //   //       this._router.navigate([`pages/dynamic-search/search/${res['data'][0].activeVersion.id}`]);\r\n  //   //     } else {\r\n  //   //       this.alertService.error(\r\n  //   //         `You don't have permissions for ${res['data'][0].activeVersion.pagename} . Please Contact Administrator`\r\n  //   //       );\r\n  //   //     }\r\n  //   //   });\r\n  //   // } else {\r\n  //   //   this.alertService.error(\r\n  //   //     'You don\\'t have permissions to perform the following operations .Please Contact Administrator'\r\n  //   //   );\r\n  //   // }\r\n  // }\r\n\r\n  getCurrentOrg() {\r\n    return this.getUserOrgList()\r\n      .toPromise()\r\n      .then((response:any) => {\r\n        return response['data'][0].id;\r\n      });\r\n  }\r\n\r\n  // async getAuthorizedPages() {\r\n  //   const orgId = await this.getCurrentOrg();\r\n  //   return this.pageHeaderService\r\n  //     .getAuthorizedPages(orgId)\r\n  //     .toPromise()\r\n  //     .then(\r\n  //       response => {\r\n  //         const dynamicPage = response['data'].filter(page => {\r\n  //           return (\r\n  //             page.activeVersion &&\r\n  //             (page.activeVersion.gridconfig || page.activeVersion.templatejson || this.getCustomPage(page))\r\n  //           );\r\n  //         });\r\n  //         return dynamicPage.map(page => ({\r\n  //           id: page.activeVersion.id,\r\n  //           name: page.activeVersion.pagename,\r\n  //           activeVersion: page.activeVersion\r\n  //         }));\r\n  //       },\r\n  //       _error => this.alertService.error(AppConstants.errorMessage)\r\n  //     );\r\n  // }\r\n\r\n  getCustomPage(page:any) {\r\n    if (page.activeVersion.tabconfig) {\r\n      const routingTab = JSON.parse(page.activeVersion.tabconfig).filter((x:any) => x.type === 'ROUTING');\r\n      return routingTab.length && page;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../service/http.service';\r\nimport { OcrValidationServiceConfig } from './ocr-validation-url.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OcrValidationService {\r\n  constructor(private httpService: HttpService) {\r\n    console.log('log');\r\n  }\r\n\r\n  getUpload(obj:any) {\r\n    return this.httpService.post(OcrValidationServiceConfig.EndPoint.OCRValidate.GetNewOcrData, JSON.parse(obj));\r\n  }\r\n}\r\n","\nimport { Component, EventEmitter, Injector, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { AlertService } from '../service/alert.service';\nimport { AuthService } from '../service/auth.service';\nimport { DataStoreService } from '../service/data-store.service';\nimport { LocalService } from '../service/local.service';\n// import { FormioComponent } from 'angular-formio';\nimport { NgxfUploaderService } from 'ngxf-uploader';\nimport { OcrValidationService } from '../@core/ocr-validation.service';\nimport { Subscription } from 'rxjs';\nimport { RBACINFO } from '../@core/ocr-validation-url.config';\n\n@Component({\n  selector: 'lib-ocrvalidation',\n  templateUrl: './ocrvalidation.component.html',\n  styleUrls: ['./ocrvalidation.component.scss']\n})\nexport class OcrvalidationComponent implements OnInit {\n  ocrDocumentDetails: any;\n  imgUrl: any;\n  showOcrForm!: boolean;\n  tableschemaconfig: any;\n  jsonForm: any;\n  isformIO = false;\n  @ViewChild('formIO')\n  // formIO!: FormioComponent;\n  formJson: Array<any> = [];\n  environment: any;\n  RBACORG: RBACINFO = new RBACINFO();\n  orgSubs!: Subscription;\n  orgId: any;\n  triggerRefresh: any;\n  authService: any;\n  localstorage: any;\n  dataStore: any;\n  uploadService: any;\n  alertService: AlertService;\n  fromTitle: any;\n  duplicateTableSchemaconfig: any;\n  isOcrForm: any;\n  documentType: any;\n  sourceid: any;\n  isReadOnly = false;\n  contentArray: Array<any> = [];\n  @Input() formResponseData: any;\n  @Input() currenttemplateResult: any;\n  @Input() submitionData: any;\n  @Output() ocrResponse = new EventEmitter();\n  constructor(injector: Injector,private ocrValidationService: OcrValidationService, private _storeservice: DataStoreService) {\n    this.authService = injector.get<AuthService>(AuthService);\n    this.localstorage = injector.get<LocalService>(LocalService);\n    this.dataStore = injector.get<DataStoreService>(DataStoreService);\n    this.uploadService = injector.get<NgxfUploaderService>(NgxfUploaderService);\n    this.alertService = injector.get<AlertService>(AlertService);\n    this.triggerRefresh = new EventEmitter();\n   }\n\n   ngOnInit(): void {\n    this.orgSubs =  this._storeservice.currentStore.subscribe((res: any) => {\n      if (res['RBACORG'] && res['RBACORG'] !== '') {\n        this.RBACORG = res['RBACORG'];\n        console.log(this.RBACORG, 'RBACORG Profile');\n        this.environment = this.RBACORG['environment'];\n        this.orgId = parseInt(this.RBACORG['orgID']);\n        if(this.environment){\n          const obj = this.localstorage.getObj('OCRObj');\n          this.getTemplate(this.currenttemplateResult);\n          this.getUpload(obj);\n        }\n      }\n    });\n  }\nngOnDestroy(): void {\n   \n    this.orgSubs.unsubscribe();\n  }\n  private getTemplate(result: any) {\n    if (result) {\n      this.fromTitle = result.data?.pagename ? result.data?.pagename : '';\n      this.dataStore.setData('title', this.fromTitle);\n\n      if (result.data.templatejson) {\n        this.isformIO = true;\n        result.data.templatejson = result.data.templatejson.replaceAll('{sourceid}', this.sourceid);\n        this.tableschemaconfig = JSON.parse(result.data.tableschemaconfig);\n        this.duplicateTableSchemaconfig = { ...this.tableschemaconfig };\n        this.isOcrForm = this.tableschemaconfig.ocrchecked;\n        this.documentType = this.tableschemaconfig.selectedDocumentType;\n        this.jsonForm = {\n          components: JSON.parse(result.data.templatejson).components.filter((component:any) => component.key !== 'submit')\n        };\n      }\n    }\n  }\n\n  getUpload(obj:any) {\n    this.ocrValidationService.getUpload(obj).subscribe(\n      (res: any) => {\n        if (res && res.data) {\n          const resData = res.data;\n          const imageCategory = resData?.imageCategory;\n          this.ocrDocumentDetails = imageCategory?.id_json[0];\n          const fileUrl = resData?.fileUrl;\n          this.imgUrl = fileUrl?.source.url;\n          this.ocrFormPatching();\n        } else {\n          this.alertService.error('Something Went Wrong!');\n        }\n      },\n      err => console.log(err)\n    );\n  }\n\n  ocrFormPatching() {\n    const ArrayOCR = this.tableschemaconfig.fieldmapping.filter((element:any) => element.ocrkey);\n    ArrayOCR?.forEach((res:any) => {\n      if (this.ocrDocumentDetails) {\n        const documentValue = Object.keys(this.ocrDocumentDetails);\n        documentValue?.forEach(element => {\n          if (element.toLowerCase() == res.ocrkey.toLowerCase()) {\n            this.submitionData.data[res.field] =\n              res.ocrkey == 'date_of_birth'\n                ? new Date(this.ocrDocumentDetails[element])\n                : this.ocrDocumentDetails[element];\n          }\n        });\n      }\n    });\n    const json = this.jsonForm.components[0].components;\n    // ArrayOCR.forEach(({ field }) => {\n    //   const formJson = json.filter(res => res.key.includes(field));\n    //   this.formJson.push(...formJson);\n    // });\n    this.jsonForm.components[0].components = this.formJson;\n    this.triggerRefresh.emit({\n      property: 'form',\n      value: this.jsonForm\n    });\n  }\n\n  backToForm() {\n    this.ocrResponse.emit(this.submitionData);\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"row\">\n      <div class=\"col pr-2\">\n        <p-card styleClass=\"w-100 h-100\" header=\"Uploaded Document\">\n          <img [src]=\"imgUrl\" alt=\"document\" class=\"w-100\" />\n        </p-card>\n      </div>\n      <div class=\"col pl-2\">\n        <p-card styleClass=\"w-100 h-100\" header=\"Document Information\">\n          <div class=\"col-12 dynamic-page mt-0\" *ngIf=\"isformIO\">\n            <!-- <formio\n              #formIO\n              [form]=\"jsonForm\"\n              [readOnly]=\"isReadOnly\"\n              [submission]=\"submitionData\"\n              [refresh]=\"triggerRefresh\"></formio> -->\n          </div>\n          <button type=\"button\" class=\"btn btn-cancel\" (click)=\"backToForm()\">Done</button>\n        </p-card>\n      </div>\n    </div>\n  </div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { RBACINFO } from './pics-ocrvalidation/@core/ocr-validation-url.config';\nimport { PermissionStore } from './pics-ocrvalidation/store/permission.store';\nimport { DataStoreService } from './pics-ocrvalidation/service/data-store.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'lib-ocr-validations',\n  template: `\n   <lib-ocrvalidation></lib-ocrvalidation>\n  `,\n  styles: [\n  ]\n})\nexport class OcrValidationsComponent implements OnInit {\n  @Input() public RBACORG?: RBACINFO = new RBACINFO();\n  @Input() public PERMISSION?: any;\n  @Input() public ocrEvent!: Observable<any>;\n  constructor( private permissionStore: PermissionStore,\n    private _storeservice: DataStoreService) { \n\n    }\n\n ngOnInit() {\n    this.ocrEvent.subscribe((val: any) => {\n      this.RBACORG = val.RBACORG;\n      this.PERMISSION = val.PERMISSION;\n      this._storeservice.setData('RBACORG', this.RBACORG);\n      this.permissionStore.setStore(this.PERMISSION);\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { OcrValidationsComponent } from './ocr-validations.component';\nimport { OcrvalidationComponent } from './pics-ocrvalidation/ocrvalidation/ocrvalidation.component';\nimport { CardModule } from 'primeng/card';\nimport { PermissionStore } from './pics-ocrvalidation/store/permission.store';\nimport { DataStoreService } from './pics-ocrvalidation/service/data-store.service';\nimport { HttpService } from './pics-ocrvalidation/service/http.service';\nimport { AuthService } from './pics-ocrvalidation/service/auth.service';\nimport { AuthStore } from './pics-ocrvalidation/auth/auth.store';\nimport { AlertService } from './pics-ocrvalidation/service/alert.service';\n\n\n@NgModule({\n  declarations: [\n    OcrValidationsComponent,\n    OcrvalidationComponent\n  ],\n  imports: [\n    CardModule,\n    \n  ],\n  providers:[HttpService,PermissionStore,DataStoreService,AuthService,AuthStore,AlertService],\n  exports: [\n    OcrValidationsComponent\n  ]\n})\nexport class OcrValidationsModule { }\n","/*\n * Public API Surface of ocr-validations\n */\n\nexport * from './lib/ocr-validations.service';\nexport * from './lib/ocr-validations.component';\nexport * from './lib/ocr-validations.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.DataStoreService","i1.HttpService","i2","i3.AuthStore","i4.CredentialsService","i5.LocalService","i1.OcrValidationService","i1.PermissionStore","i3.OcrvalidationComponent"],"mappings":";;;;;;;;;;;;;;MAKa,qBAAqB,CAAA;AAEhC,IAAA,WAAA,GAAA,GAAiB;;mHAFN,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cAFpB,MAAM,EAAA,CAAA,CAAA;4FAEP,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAHjC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCJY,0BAA0B,CAAA;;AACvB,0BAAA,CAAA,QAAQ,GAAG;AACvB,IAAA,WAAW,EAAE;AACX,QAAA,aAAa,EAAE,sBAAsB;AACrC,QAAA,cAAc,EAAE,sBAAsB;AACtC,QAAA,gBAAgB,EAAE,oBAAoB;AACtC,QAAA,iBAAiB,EAAE,qBAAqB;AACxC,QAAA,kBAAkB,EAAE,sBAAsB;AAC1C,QAAA,oBAAoB,EAAE,+BAA+B;AACrD,QAAA,gBAAgB,EAAE,wBAAwB;AAC1C,QAAA,kBAAkB,EAAE,qBAAqB;AACzC,QAAA,eAAe,EAAE,mBAAmB;AACrC,KAAA;CACF,CAAC;MAES,QAAQ,CAAA;AAArB,IAAA,WAAA,GAAA;QACE,IAAO,CAAA,OAAA,GAAE,EAAE,CAAC;QACZ,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC;KAIf;AAAA,CAAA;MACY,WAAW,CAAA;AAOvB;;MC3BY,KAAK,CAAA;AAIhB,IAAA,WAAA,CAAsB,YAAe,EAAA;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,eAAe,CAAC,YAAY,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;KAC3C;AAED,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;KAChC;AAED,IAAA,QAAQ,CAAC,SAAY,EAAA;AACnB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC9B;AACF;;ACbK,MAAO,eAAgB,SAAQ,KAAU,CAAA;AAC7C,IAAA,WAAA,GAAA;QACE,KAAK,CAAC,EAAE,CAAC,CAAC;KACX;AAED,IAAA,QAAQ,CAAC,IAAS,EAAE,IAAA,GAAe,GAAG,EAAA;QACpC,MAAM,aAAa,GAA4B,EAAE,CAAC;QAClD,IAAI,IAAI,KAAK,GAAG,EAAE;YAChB,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,YAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAe,KAAI;gBACnC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC;AACtD,aAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,KAAK,CAAA,EAAK,aAAa,CAAA,CAAG,CAAC;AACpD,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,OAAO,CAAC,CAAC,UAAe,KAAI;gBAC/B,aAAa,CAAC,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,qBAAqB,CAAC;AAC9E,aAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,KAAK,CAAA,EAAK,aAAa,CAAA,CAAG,CAAC;AACpD,SAAA;KACF;IAED,QAAQ,CAAC,OAAe,GAAG,EAAA;QACzB,IAAI,IAAI,KAAK,GAAG;YAAE,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;;YAC/C,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;KAC9C;AAEO,IAAA,IAAI,CAAC,KAAY,EAAA;QACvB,IAAI,MAAM,GAAU,EAAE,CAAC;AACvB,QAAA,KAAK,CAAC,OAAO,CAAC,IAAI,IAAG;AACnB,YAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClB,YAAA,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;AACvD,gBAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AACrD,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,MAAM,CAAC;KACf;;6GAnCU,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;iHAAf,eAAe,EAAA,CAAA,CAAA;4FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;;;MCAE,gBAAgB,CAAA;AAI3B,IAAA,WAAA,GAAA;AAHQ,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,eAAe,CAAM,EAAS,CAAC,CAAC;AAC3D,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;;KAI7D;IAED,OAAO,CAAC,GAAW,EAAE,KAAU,EAAA;AAC7B,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC5C,QAAA,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC1B,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC7C;AAED,IAAA,SAAS,CAAC,KAAU,EAAA;AAClB,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;AAED,IAAA,OAAO,CAAC,GAAW,EAAA;AACjB,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC5C,QAAA,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC;KAC1B;IAED,UAAU,GAAA;AACR,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,IAAG;AACtC,YAAA,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC;AAC3B,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC7C;IAED,eAAe,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;KACvC;;8GAjCU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAhB,gBAAgB,EAAA,CAAA,CAAA;4FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,UAAU;;;ACCX,IAAY,SAKX,CAAA;AALD,CAAA,UAAY,SAAS,EAAA;AACnB,IAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK,CAAA;AACL,IAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI,CAAA;AACJ,IAAA,SAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACT,CAAC,EALW,SAAS,KAAT,SAAS,GAKpB,EAAA,CAAA,CAAA,CAAA;MACY,KAAK,CAAA;AAGjB,CAAA;MAgBY,YAAY,CAAA;AAIvB,IAAA,WAAA,CAAY,IAA4B,EAAA;AACtC,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC3B;AACF,CAAA;MAEY,eAAe,CAAA;AAO1B,IAAA,WAAA,CAAY,IAA+B,EAAA;AACzC,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC3B;AACF,CAAA;MAEY,WAAW,CAAA;AAUtB,IAAA,WAAA,CAAY,IAA2B,EAAA;AACrC,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC3B;AACF,CAAA;MAEY,OAAO,CAAA;AAUlB,IAAA,WAAA,CAAY,IAAuB,EAAA;AACjC,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC3B;AACF;;MCxEY,YAAY,CAAA;AAIvB,IAAA,WAAA,CAAoB,MAAc,EAAA;QAAd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AAH1B,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAS,CAAC;QAC/B,IAAoB,CAAA,oBAAA,GAAG,KAAK,CAAC;;AAInC,QAAA,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,IAAG;YAC9B,IAAI,KAAK,YAAY,eAAe,EAAE;gBACpC,IAAI,IAAI,CAAC,oBAAoB,EAAE;;AAE7B,oBAAA,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;AACnC,iBAAA;AAAM,qBAAA;;oBAEL,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAED,QAAQ,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;KACpC;AAED,IAAA,OAAO,CAAC,OAAe,EAAE,oBAAoB,GAAG,KAAK,EAAA;QACnD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,oBAAoB,CAAC,CAAC;KAC9D;AAED,IAAA,KAAK,CAAC,OAAe,EAAE,oBAAoB,GAAG,KAAK,EAAA;QACjD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,oBAAoB,CAAC,CAAC;KAC5D;AAED,IAAA,IAAI,CAAC,OAAe,EAAE,oBAAoB,GAAG,KAAK,EAAA;QAChD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,oBAAoB,CAAC,CAAC;KAC3D;AAED,IAAA,IAAI,CAAC,OAAe,EAAE,oBAAoB,GAAG,KAAK,EAAA;QAChD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,oBAAoB,CAAC,CAAC;KAC9D;AAED,IAAA,KAAK,CAAC,IAAe,EAAE,OAAe,EAAE,oBAAoB,GAAG,KAAK,EAAA;AAClE,QAAA,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;AACjD,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KAC5D;IAED,KAAK,GAAA;;AAEH,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;;0GA/CU,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;8GAAZ,YAAY,EAAA,CAAA,CAAA;4FAAZ,YAAY,EAAA,UAAA,EAAA,CAAA;kBADxB,UAAU;;;MCLE,OAAO,CAAA;;AACJ,OAAA,CAAA,SAAS,GAAG;AACxB,IAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE;AACJ,YAAA,WAAW,EAAE,2BAA2B;AACxC,YAAA,cAAc,EAAE,wCAAwC;AACxD,YAAA,KAAK,EAAE,iBAAiB;AACxB,YAAA,YAAY,EAAE,yBAAyB;AACvC,YAAA,MAAM,EAAE,kBAAkB;AAC1B,YAAA,QAAQ,EAAE,qBAAqB;AAC/B,YAAA,QAAQ,EAAE,gBAAgB;AAC1B,YAAA,kBAAkB,EAAE,iFAAiF;AACrG,YAAA,MAAM,EAAE,cAAc;AACtB,YAAA,aAAa,EAAE,0BAA0B;AACzC,YAAA,OAAO,EAAE,wBAAwB;AACjC,YAAA,YAAY,EAAE,sBAAsB;AACpC,YAAA,kBAAkB,EAAE,2BAA2B;AAC/C,YAAA,qBAAqB,EAAE,0BAA0B;AAClD,SAAA;AACD,QAAA,UAAU,EAAE;AACV,YAAA,kBAAkB,EAAE,2BAA2B;AAC/C,YAAA,cAAc,EAAE,sBAAsB;AACtC,YAAA,oBAAoB,EAAE,6BAA6B;AACpD,SAAA;AACD,QAAA,aAAa,EAAE;AACb,YAAA,KAAK,EAAE,sBAAsB;AAC7B,YAAA,UAAU,EAAE,wBAAwB;AACrC,SAAA;AACF,KAAA;CACF;;MChBU,WAAW,CAAA;IAetB,WAAoB,CAAA,IAAgB,EAAS,aAA+B,EAAA;QAAxD,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAAS,IAAa,CAAA,aAAA,GAAb,aAAa,CAAkB;QAb5E,IAAW,CAAA,WAAA,GAAG,IAAI,CAAC;QAEnB,IAAO,CAAA,OAAA,GAAG,EAAE,CAAC;QAEN,IAAO,CAAA,OAAA,GAAG,IAAI,WAAW,EAAE;AAC/B,aAAA,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;AACjC,aAAA,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;AACvC,aAAA,GAAG,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;AAE1B,QAAA,IAAA,CAAA,WAAW,GAA6B,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;AAC5E,QAAA,IAAA,CAAA,kBAAkB,GAA6B,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;;QAKxF,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAQ,KAAI;YACrD,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE;AAC3C,gBAAA,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,2BAA2B,CAAC;gBAC3F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC1C,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;KAChB;AAED,IAAA,GAAG,CAAC,QAAgB,EAAA;AAClB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAG,EAAA,IAAI,CAAC,GAAG,GAAG,QAAQ,EAAE,EAAE;AAC7C,YAAA,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE;AAC/B,SAAA,CAAC,CAAC;KACJ;IAED,IAAI,CAAC,QAAgB,EAAE,IAAS,EAAA;AAC9B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,EAAG,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAE,CAAA,EAAE,IAAI,EAAE;AACpD,YAAA,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE;AAC/B,SAAA,CAAC,CAAC;KACJ;IAED,GAAG,CAAC,QAAgB,EAAE,IAAS,EAAA;AAC7B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,EAAG,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAE,CAAA,EAAE,IAAI,EAAE;AACnD,YAAA,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE;AAC/B,SAAA,CAAC,CAAC;KACJ;IAED,KAAK,CAAC,QAAgB,EAAE,IAAU,EAAA;AAChC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAG,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAE,CAAA,EAAE,IAAI,EAAE;AACrD,YAAA,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE;AAC/B,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,MAAM,CAAC,QAAgB,EAAA;AACrB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAG,EAAA,IAAI,CAAC,GAAG,GAAG,QAAQ,EAAE,EAAE;AAChD,YAAA,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE;AAC/B,SAAA,CAAC,CAAC;KACJ;IAED,cAAc,GAAA;QACZ,OAAO,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC9C;AAED,IAAA,wBAAwB,CAAC,WAAe,EAAA;QACtC,OAAO,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;KAC3D;AACD,IAAA,SAAS,CAAC,QAAgB,EAAE,IAAS,EAAE,WAAe,EAAA;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,EAAG,QAAQ,CAAA,CAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;KACpG;AAED,IAAA,UAAU,CAAC,QAAgB,EAAE,IAAS,EAAE,WAAe,EAAA;QACrD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,CAAG,EAAA,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAA,CAAE,EAAE,IAAI,EAAE;AACpC,YAAA,OAAO,EAAE,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC;AACnD,YAAA,OAAO,EAAE,UAAU;SACpB,CAAC;AACD,aAAA,IAAI,CACH,GAAG,CAAC,IAAI,IAAG;AACT,YAAA,OAAO,IAAI,CAAC;SACb,CAAC,CACH,CAAC;KACL;AACD,IAAA,cAAc,CAAC,GAAO,EAAA;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAG,EAAA,GAAG,CAAE,CAAA,CAAC,CAAC;KAChC;AACD;;;;;AAKG;AACH,IAAA,iBAAiB,CAAC,QAAgB,EAAA;AAChC,QAAA,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAA,EAAG,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAA,CAAE,CAAC;KACjD;;AAGD,IAAA,WAAW,CAAC,KAAwB,EAAA;;QAClC,IAAI,YAAY,GAAG,EAAE,CAAC;AACtB,QAAA,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;;YAErC,YAAY,GAAG,UAAU,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AAChD,SAAA;AAAM,aAAA;;AAEL,YAAA,YAAY,GAAG,CAAe,YAAA,EAAA,KAAK,CAAC,MAAM,cACxC,CAAA,CAAA,EAAA,GAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,KAAK,0CAAE,OAAO,IAAG,MAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,GAAG,KAAK,CAAC,OACxD,EAAE,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC;KACjC;IACD,QAAQ,GAAA;AACN,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;AAC1D,QAAA,OAAO,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACtC;;yGA9GU,WAAW,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAX,WAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,cAFV,MAAM,EAAA,CAAA,CAAA;4FAEP,WAAW,EAAA,UAAA,EAAA,CAAA;kBAHvB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCVY,SAAS,CAAA;AAErB;;ACKK,MAAO,SAAU,SAAQ,KAAgB,CAAA;AAC7C,IAAA,WAAA,CAAoB,WAAwB,EAAA;AAC1C,QAAA,KAAK,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;QADL,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;KAE3C;AAED,IAAA,WAAW,CAAC,IAAa,EAAA;QACvB,IAAI,CAAC,QAAQ,CAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,KAAK,CAAA,EAAA,EAAE,IAAI,EAAA,CAAA,CAAG,CAAC;KACxC;IAED,WAAW,GAAA;AACT,QAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YACnB,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5B,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAChF,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAI;AACb,gBAAA,OAAO,IAAI,CAAC;aACb,CAAC,CACH,CAAC;AACH,SAAA;KACF;;uGApBU,SAAS,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAT,SAAS,EAAA,CAAA,CAAA;4FAAT,SAAS,EAAA,UAAA,EAAA,CAAA;kBADrB,UAAU;;;ACAX,MAAM,cAAc,GAAG,WAAW,CAAC;AAEnC;;;AAGG;MAIU,kBAAkB,CAAA;AAG7B,IAAA,WAAA,GAAA;QAFQ,IAAK,CAAA,KAAA,GAAkB,IAAI,CAAC;QAGlC,MAAM,gBAAgB,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAChE,QAAA,IAAI,gBAAgB,EAAE;AACpB,YAAA,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC;AAC/B,SAAA;KACF;AAED;;;AAGG;IACH,eAAe,GAAA;AACb,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;KAC3B;AAED;;;AAGG;AACH,IAAA,IAAI,WAAW,GAAA;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AAED;;;;;;AAMG;AACH,IAAA,cAAc,CAAC,WAAoB,EAAA;AACjC,QAAA,IAAI,CAAC,KAAK,GAAG,WAAW,IAAI,IAAI,CAAC;AACjC,QAAA,IAAI,WAAW,EAAE;AACf,YAAA,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;AACrD,SAAA;AAAM,aAAA;YACL,cAAc,CAAC,KAAK,EAAE,CAAC;AACxB,SAAA;KACF;;gHAxCU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;4FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MChBY,cAAc,CAAA;AACzB,IAAA,WAAA,CAAsB,OAAY,EAAA;QAAZ,IAAO,CAAA,OAAA,GAAP,OAAO,CAAK;KAAI;AAE/B,IAAA,OAAO,CAAC,GAAW,EAAA;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KAClC;IAEM,OAAO,CAAC,GAAW,EAAE,IAAS,EAAA;QACnC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACxC;AAEM,IAAA,MAAM,CAAC,GAAW,EAAE,IAAI,GAAG,IAAI,EAAA;QACpC,IAAI;YACF,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC/B,YAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACzB,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,IAAI,EAAE;AACT,gBAAA,MAAM,CAAC,CAAC;AACT,aAAA;AACF,SAAA;KACF;IAEM,MAAM,CAAC,GAAW,EAAE,IAAS,EAAA;AAClC,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;KAChD;AAEM,IAAA,UAAU,CAAC,GAAW,EAAA;AAC3B,QAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC9B;IAEM,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;KACtB;AACF;;AC5BK,MAAO,YAAa,SAAQ,cAAc,CAAA;AAC9C,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;KAC9B;;0GAHU,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA;4FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCUY,WAAW,CAAA;IAGtB,WACE,CAAA,QAAkB,EACV,WAAwB,EACxB,OAAe,EACf,KAAgB,EAChB,kBAAsC,EACtC,UAAwB,EAAA;QAJxB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;QACf,IAAK,CAAA,KAAA,GAAL,KAAK,CAAW;QAChB,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;QACtC,IAAU,CAAA,UAAA,GAAV,UAAU,CAAc;AAM3B,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,eAAe,CAAM,EAAE,CAAC,CAAC;AAC9C,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;AAEtC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,eAAe,CAAM,EAAE,CAAC,CAAC;AAClD,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QARhD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAe,YAAY,CAAC,CAAC;KAE9D;AAQD,IAAA,WAAW,CAAC,IAAS,EAAA;AACnB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzB;AACD,IAAA,cAAc,CAAC,IAAS,EAAA;AACtB,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,cAAc,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAClE;IAED,aAAa,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACvE;AAED,IAAA,gBAAgB,CAAC,IAAQ,EAAA;AACvB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;KAC9E;AAED,IAAA,wBAAwB,CAAC,IAAQ,EAAA;AAC/B,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;KACrF;IAED,qBAAqB,GAAA;AACnB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;KAChF;IAED,YAAY,GAAA;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAO,KAAI;AACvF,YAAA,OAAO,GAAG,CAAC;AACb,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,KAAK,CAAC,KAAa,EAAE,QAAgB,EAAE,GAAW,EAAA;AACvD,QAAA,MAAM,IAAI,GAAG;AACX,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE;SACvB,CAAC;QACF,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CACxE,QAAQ,CAAC,CAAC,GAAQ,KAAuB;AACvC,YAAA,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,eAAe,EAAE;AACnC,gBAAA,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AACxB,aAAA;AACD,YAAA,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACrE,YAAA,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACvE,YAAA,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AACtE,YAAA,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACvE,YAAA,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACxE,YAAA,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;SAC3B,CAAC,CACH,CAAC;KACH;IAEM,YAAY,GAAA;QACjB,MAAM,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC9C,MAAM,YAAY,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC5D,QAAA,MAAM,IAAI,GAAG;YACX,KAAK;YACL,YAAY;SACb,CAAC;QACF,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,IAAI,CAC/E,QAAQ,CAAC,CAAC,GAAQ,KAAS;AACzB,YAAA,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACrE,YAAA,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACvE,YAAA,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AACtE,YAAA,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACvE,YAAA,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACxE,YAAA,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SACvC,CAAC,CACH,CAAC;KACH;IAEM,aAAa,GAAA;AAClB,QAAA,IAAI,CAAC,WAAW;aACb,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACxC,YAAA,KAAK,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC;SACvC,CAAC;aACD,SAAS,CAAC,MAAK;AACd,YAAA,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;AAClD,SAAC,CAAC,CAAC;KACN;IAEM,MAAM,GAAA;QACX,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClC,cAAc,CAAC,KAAK,EAAE,CAAC;QACvB,YAAY,CAAC,KAAK,EAAE,CAAC;KACtB;IAEM,WAAW,GAAA;AAChB,QAAA,OAAO,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAChF,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAI;;AAEb,YAAA,OAAO,IAAI,CAAC;SACb,CAAC,CACH,CAAC;KACH;AAEM,IAAA,WAAW,CAAC,EAAM,EAAA;AACvB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAO,KAAI;AACrG,YAAA,OAAO,GAAG,CAAC;AACb,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,kBAAkB,CAAC,KAAS,EAAA;QACjC,OAAO,IAAI,CAAC,WAAW;AACpB,aAAA,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC7E,aAAA,IAAI,CAAC,CAAC,GAAQ,KAAI;AACjB,YAAA,OAAO,GAAG,CAAC;AACb,SAAC,CAAC,CAAC;KACN;IAED,SAAS,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACjE;AAED,IAAA,aAAa,CAAC,IAAS,EAAA;AACrB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KAC/E;IAEM,UAAU,GAAA;QACf,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5C,QAAA,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACrB,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AAC1B,SAAA;KACF;IAEM,OAAO,GAAA;AACZ,QAAA,OAAO,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC;KACpC;IAEM,QAAQ,GAAA;QACb,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5C,QAAA,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE;AACpG,YAAA,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;AAC1C,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;KACF;AAED,IAAA,WAAW,CAAC,IAAQ,EAAA;AAClB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;KAC7E;AAED,IAAA,cAAc,CAAC,IAAQ,EAAA;AACrB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;KAChF;AAED,IAAA,gBAAgB,CAAC,IAAQ,EAAA;AACvB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KACxB;IAED,gBAAgB,GAAA;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;;;;;;;;;;;;IAqBD,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,cAAc,EAAE;AACzB,aAAA,SAAS,EAAE;AACX,aAAA,IAAI,CAAC,CAAC,QAAY,KAAI;YACrB,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAChC,SAAC,CAAC,CAAC;KACN;;;;;;;;;;;;;;;;;;;;;;;AAyBD,IAAA,aAAa,CAAC,IAAQ,EAAA;AACpB,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;YAChC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAK,KAAK,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;AACpG,YAAA,OAAO,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC;AAClC,SAAA;KACF;;yGAzOU,WAAW,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;6GAAX,WAAW,EAAA,CAAA,CAAA;4FAAX,WAAW,EAAA,UAAA,EAAA,CAAA;kBADvB,UAAU;;;MCNE,oBAAoB,CAAA;AAC/B,IAAA,WAAA,CAAoB,WAAwB,EAAA;QAAxB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;AAC1C,QAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACpB;AAED,IAAA,SAAS,CAAC,GAAO,EAAA;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KAC9G;;kHAPU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAJ,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;4FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCWY,sBAAsB,CAAA;AA+BjC,IAAA,WAAA,CAAY,QAAkB,EAAS,oBAA0C,EAAU,aAA+B,EAAA;QAAnF,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAAU,IAAa,CAAA,aAAA,GAAb,aAAa,CAAkB;QAzB1H,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;;QAGjB,IAAQ,CAAA,QAAA,GAAe,EAAE,CAAC;AAE1B,QAAA,IAAA,CAAA,OAAO,GAAa,IAAI,QAAQ,EAAE,CAAC;QAcnC,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;QACnB,IAAY,CAAA,YAAA,GAAe,EAAE,CAAC;AAIpB,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAE,CAAC;QAEzC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAc,WAAW,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAe,YAAY,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAmB,gBAAgB,CAAC,CAAC;QAClE,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAsB,mBAAmB,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAe,YAAY,CAAC,CAAC;AAC7D,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;KACzC;IAED,QAAQ,GAAA;AACP,QAAA,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAQ,KAAI;YACrE,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE;AAC3C,gBAAA,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;gBAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/C,gBAAA,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC7C,IAAG,IAAI,CAAC,WAAW,EAAC;oBAClB,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC/C,oBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AAC7C,oBAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACrB,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IACH,WAAW,GAAA;AAEP,QAAA,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KAC5B;AACO,IAAA,WAAW,CAAC,MAAW,EAAA;;AAC7B,QAAA,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,SAAS,GAAG,CAAA,MAAA,MAAM,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,IAAG,CAAA,EAAA,GAAA,MAAM,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,GAAG,EAAE,CAAC;YACpE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAEhD,YAAA,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE;AAC5B,gBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,gBAAA,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5F,gBAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACnE,gBAAA,IAAI,CAAC,0BAA0B,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,IAAI,CAAC,iBAAiB,CAAE,CAAC;gBAChE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;gBACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC;gBAChE,IAAI,CAAC,QAAQ,GAAG;oBACd,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAa,KAAK,SAAS,CAAC,GAAG,KAAK,QAAQ,CAAC;iBAClH,CAAC;AACH,aAAA;AACF,SAAA;KACF;AAED,IAAA,SAAS,CAAC,GAAO,EAAA;AACf,QAAA,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,CAChD,CAAC,GAAQ,KAAI;AACX,YAAA,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE;AACnB,gBAAA,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;gBACzB,MAAM,aAAa,GAAG,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,aAAa,CAAC;AAC7C,gBAAA,IAAI,CAAC,kBAAkB,GAAG,aAAa,KAAb,IAAA,IAAA,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC;gBACpD,MAAM,OAAO,GAAG,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,OAAO,CAAC;AACjC,gBAAA,IAAI,CAAC,MAAM,GAAG,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,MAAM,CAAC,GAAG,CAAC;gBAClC,IAAI,CAAC,eAAe,EAAE,CAAC;AACxB,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAClD,aAAA;AACH,SAAC,EACD,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CACxB,CAAC;KACH;IAED,eAAe,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,OAAW,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7F,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAE,OAAO,CAAC,CAAC,GAAO,KAAI;YAC5B,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC3B,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAC3D,aAAa,KAAA,IAAA,IAAb,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,OAAO,CAAC,OAAO,IAAG;oBAC/B,IAAI,OAAO,CAAC,WAAW,EAAE,IAAI,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE;wBACrD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;4BAChC,GAAG,CAAC,MAAM,IAAI,eAAe;kCACzB,IAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AAC5C,kCAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AACxC,qBAAA;AACH,iBAAC,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;;;;;AAKpD,QAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;AACvD,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;AACvB,YAAA,QAAQ,EAAE,MAAM;YAChB,KAAK,EAAE,IAAI,CAAC,QAAQ;AACrB,SAAA,CAAC,CAAC;KACJ;IAED,UAAU,GAAA;QACR,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC3C;;oHA7HU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAN,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,wUCjBnC,s0BAsBA,EAAA,MAAA,EAAA,CAAA,0HAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,WAAA,EAAA,OAAA,EAAA,YAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDLa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,gCAAgC;oBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;AAC9C,iBAAA,CAAA;;;QAUC,QAAQ,EAAA,CAAA;sBAFP,SAAS;uBAAC,QAAQ,CAAA;gBAoBV,gBAAgB,EAAA,CAAA;sBAAxB,KAAK;gBACG,qBAAqB,EAAA,CAAA;sBAA7B,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACI,WAAW,EAAA,CAAA;sBAApB,MAAM;;;MEjCI,uBAAuB,CAAA;IAIlC,WAAqB,CAAA,eAAgC,EAC3C,aAA+B,EAAA;QADpB,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;QAC3C,IAAa,CAAA,aAAA,GAAb,aAAa,CAAkB;AAJzB,QAAA,IAAA,CAAA,OAAO,GAAc,IAAI,QAAQ,EAAE,CAAC;KAMjD;IAEJ,QAAQ,GAAA;QACL,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAQ,KAAI;AACnC,YAAA,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AAC3B,YAAA,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;YACjC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACpD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACjD,SAAC,CAAC,CAAA;KACH;;qHAhBU,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAO,eAAA,EAAA,EAAA,EAAA,KAAA,EAAAP,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,EANxB,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;AAET,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAQ,sBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,uBAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FAIU,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBARnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,QAAQ,EAAE,CAAA;;AAET,EAAA,CAAA;AACD,oBAAA,MAAM,EAAE,EACP;AACF,iBAAA,CAAA;+HAEiB,OAAO,EAAA,CAAA;sBAAtB,KAAK;gBACU,UAAU,EAAA,CAAA;sBAAzB,KAAK;gBACU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;;;MCSK,oBAAoB,CAAA;;kHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,iBAZ7B,uBAAuB;QACvB,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAGtB,UAAU,CAAA,EAAA,OAAA,EAAA,CAKV,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAGd,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EALrB,SAAA,EAAA,CAAC,WAAW,EAAC,eAAe,EAAC,gBAAgB,EAAC,WAAW,EAAC,SAAS,EAAC,YAAY,CAAC,EAJlF,OAAA,EAAA,CAAA;YACP,UAAU;AAEX,SAAA,CAAA,EAAA,CAAA,CAAA;4FAMU,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAdhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,uBAAuB;wBACvB,sBAAsB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,UAAU;AAEX,qBAAA;AACD,oBAAA,SAAS,EAAC,CAAC,WAAW,EAAC,eAAe,EAAC,gBAAgB,EAAC,WAAW,EAAC,SAAS,EAAC,YAAY,CAAC;AAC3F,oBAAA,OAAO,EAAE;wBACP,uBAAuB;AACxB,qBAAA;AACF,iBAAA,CAAA;;;ACzBD;;AAEG;;ACFH;;AAEG;;;;"}